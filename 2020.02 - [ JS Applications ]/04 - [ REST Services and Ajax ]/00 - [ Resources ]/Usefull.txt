LINK
=> https://www.youtube.com/watch?v=TBUPvFToVtg&feature=youtu.be [Ивайло Димитров 2019 Януари ]
=> https://www.youtube.com/watch?t=528&v=OFIeRLHU-i0&feature=youtu.be [ Папазов 2018 Септември ]

ORM
=> Вид framework => някой е написал за нас готов tool set, който ни помага директно да боравим с базата данни
=> Всеки език и всяка платформа си има ORM-и
=> имат някакъв начин чрез който достъпват базата данни
=> Работят с Модели(класовете които репрезентират базите в базата данни) винаги
и някакъв лесен начин за навигиране сред данните, който най-често се нарича Query Builder
=> ORM-а каства данните от таблиците от базата данни в класове така че ние да можем да работим с тях (тва е силата на ORM-ите)
=> Плюсове
ние работим с Класове и ORM генерира SQL заявки
имаме продуктивност, бързо пишем заявки, пишем по-малко код
имаме абстракция от базата данни и работим с модели, което за нас като програмисти е много по-лесно
имаме по-голяма управляемост в CRUD операциите
=> Минус
когато имаме огромна нужда от performance (примерно: някаква много голяма игра)

Entity Framework Core is ORM framework for .Net and .Net Core
На Entity Framework Query Builder е => LINQ

Получаваме един списък от базата данни, някъв лист с данни, който ние можем да си го моделираме, така че накрая да получем желания резултат

DbContext
=> е класа който ще ни прави този превод от базата данни 

Миграция
=> е начинът по който ние с Entity Framework може да направим промяна в структурата в базата данни (това не са CRUD операции)
махаме таблица, слагаме таблица, махаме колона от таблица слагаме колона от таблица, променяме типа на данни на дадена колона в таблица
=> ние трябва да мигрираме нашата база данни към новото й състояние и съответно за това ни се налагат миграциите